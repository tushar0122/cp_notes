PriorityQueue

Initialization
    => var pq = new PriorityQueue<E>();
    => By default minHeap;
    => var k = new PriorityQueue(Collections.reverseOrder())
    => Max PriorityQueue

Access, Insert, Remove
    => pq.peek() to access peek element
    => pq.add() to add priortyQueue element
    => pq.poll() to remove and return peek;
    => pq.remove(value) to remove value
    => pq.clear() => to remove all values

Access Time Complexity
    => O(1)

Insert Time Complexity 
    => O(logN) 

Remove Time Complexity
    => O(logN) => head
    => O(N) => any element

Iterating 
    => pq.iterator()
    while(iterator.hasNext()){
        iterator.next()
    }

